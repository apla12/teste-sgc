
package com.siemens.ssa.communicator.webservices.response;

import javax.jws.WebService;
import javax.xml.ws.BindingType;

import pt.atos.util.dinjection.ServiceLoaderFactory;
import pt.atos.util.exception.ApplicationException;

import com.siemens.ssa.communicator.webservices.interfaces.ResponseHandler;


/**
 * Automatic Declaration Selection Service Client Interface
 * 
 * This class was generated by the JAX-WS RI.
 * Oracle JAX-WS 2.1.3-06/19/2008 07:03 PM(bt)
 * Generated source version: 2.1
 * 
 */
@WebService(portName = "ClientSelectionServicePort", serviceName = "ClientSelectionService", targetNamespace = "urn:webservice", wsdlLocation = "/wsdls/InterfaceSubsistema.wsdl", endpointInterface = "com.siemens.ssa.communicator.webservices.response.ClientSelectionServicePort")
@BindingType("http://schemas.xmlsoap.org/wsdl/soap/http")
public class ClientSelectionService_ClientSelectionServicePortImpl
    implements ClientSelectionServicePort
{


    public ClientSelectionService_ClientSelectionServicePortImpl() {
    }

    /**
     * 
     * @param selectionResult
     * @return
     *     returns java.lang.String
     * @throws SelectionException_Exception
     */
    public String selectionResult(SelectionResult selectionResult)
        throws SelectionException_Exception
    {
    	ResponseHandler resp = ServiceLoaderFactory.buildServiceImplementation(ResponseHandler.class,this.getClass().getClassLoader());
    	
        try {
			return resp.selectionResult(selectionResult);
		} catch (ApplicationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return null; 
    }

    /**
     * 
     * @param rectificationResult
     * @return
     *     returns java.lang.String
     * @throws SelectionException_Exception
     */
    public String rectificationResult(RectificationResult rectificationResult)
        throws SelectionException_Exception
    {
    	ResponseHandler resp = ServiceLoaderFactory.buildServiceImplementation(ResponseHandler.class);
        try {
			return resp.rectificationResult(rectificationResult);
		} catch (ApplicationException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return null; 
    }

    /**
     * 
     * @param reselectionResult
     * @return
     *     returns java.lang.String
     * @throws SelectionException_Exception
     */
    public String reselectionResult(ReselectionResult reselectionResult)
        throws SelectionException_Exception
    {
    	ResponseHandler resp = ServiceLoaderFactory.buildServiceImplementation(ResponseHandler.class);
        return resp.reselectionResult(reselectionResult); 
    }

    /**
     * 
     * @param capList
     * @return
     *     returns java.lang.String
     * @throws SelectionException_Exception
     */
    public String capList(CAPList capList)
        throws SelectionException_Exception
    {
    	ResponseHandler resp = ServiceLoaderFactory.buildServiceImplementation(ResponseHandler.class);
        return resp.capList(capList);
    }

    /**
     * 
     * @param renominationList
     * @return
     *     returns java.lang.String
     * @throws SelectionException_Exception
     */
    public String renominationList(RenominationList renominationList)
        throws SelectionException_Exception
    {
    	ResponseHandler resp = ServiceLoaderFactory.buildServiceImplementation(ResponseHandler.class);
        return resp.renominationList(renominationList);
    }


	public String comunicationResult(ComunicationResult comunicationResult)	throws SelectionException_Exception {
		ResponseHandler resp = ServiceLoaderFactory.buildServiceImplementation(ResponseHandler.class);
        return resp.comunicationResult(comunicationResult);
	}

	
	public String resultRegistoControl(ResultRegistControl resultRegistControl)	throws SelectionException_Exception {
		ResponseHandler resp = ServiceLoaderFactory.buildServiceImplementation(ResponseHandler.class);
        return resp.resultRegistoControl(resultRegistControl);
	}

	@Override
	public String validateControl(ValidateAtribControl validateAtribControl) throws SelectionException_Exception {
		ResponseHandler resp = ServiceLoaderFactory.buildServiceImplementation(ResponseHandler.class);
        return resp.validateControl(validateAtribControl);
	}
}
