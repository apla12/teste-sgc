
package com.siemens.ssa.communicator.webservices.ssaservices;

import javax.jws.WebService;
import javax.xml.ws.BindingType;


/**
 * Automatic Declaration Selection Service Server Interface
 * 
 * This class was generated by the JAX-WS RI.
 * Oracle JAX-WS 2.1.3-06/19/2008 07:03 PM(bt)
 * Generated source version: 2.1
 * 
 */
@WebService(portName = "SelectionServicePort", serviceName = "SelectionServiceSoap", targetNamespace = "urn:webservice", wsdlLocation = "/wsdls/InterfaceSeleccao.wsdl", endpointInterface = "com.siemens.ssa.communicator.webservices.ssaservices.SelectionServicePort")
@BindingType("http://schemas.xmlsoap.org/wsdl/soap/http")
public class SelectionServiceSoap_SelectionServicePortImpl
    implements SelectionServicePort
{


    public SelectionServiceSoap_SelectionServicePortImpl() {
    }

    /**
     * 
     * @param declaration
     * @return
     *     returns java.lang.String
     * @throws SelectionException_Exception
     */
    public String requestSelection(Declaration declaration)
        throws SelectionException_Exception
    {
    	RequestServiceImpl impl = new RequestServiceImpl();
		return impl.requestSelection(declaration);
    }

    /**
     * 
     * @param declarationRectification
     * @return
     *     returns java.lang.String
     * @throws SelectionException_Exception
     */
    public String requestRectification(DeclarationRectification declarationRectification)
        throws SelectionException_Exception
    {
    	RequestServiceImpl impl = new RequestServiceImpl();
		return impl.requestRectification(declarationRectification);
    }

    /**
     * 
     * @param controlResult
     * @return
     *     returns java.lang.String
     * @throws SelectionException_Exception
     */
    public String notifyControlResult(ControlResult controlResult)
        throws SelectionException_Exception
    {
    	RequestServiceImpl impl = new RequestServiceImpl();
		return impl.notifyControlResult(controlResult);
    }

    /**
     * 
     * @param reselectionIM
     * @return
     *     returns java.lang.String
     * @throws SelectionException_Exception
     */
    public String requestReselectionIM(ReselectionIM reselectionIM) throws SelectionException_Exception{
    	
        RequestServiceImpl impl = new RequestServiceImpl();
        return impl.requestReselectionIM(reselectionIM);
    }
    
    /**
     * 
     * @param reselectionPAC
     * @return
     *     returns java.lang.String
     * @throws SelectionException_Exception
     */
    public String requestReselectionPAC(ReselectionPAC reselectionPAC)
        throws SelectionException_Exception
    {
    	RequestServiceImpl impl = new RequestServiceImpl();
    	return impl.requestReselectionPAC(reselectionPAC);
    }
    
    /**
     * 
     * @param releaseAuthorization
     * @return
     *     returns java.lang.String
     * @throws SelectionException_Exception
     */
    public String notifyReleaseAuthorization(ReleaseAuthorization releaseAuthorization)
        throws SelectionException_Exception
    {
    	RequestServiceImpl impl = new RequestServiceImpl();
		return impl.notifyReleaseAuthorization(releaseAuthorization);
    }
    
    /**
     * 
     * @param stopSelection
     * @return
     *     returns java.lang.String
     * @throws SelectionException_Exception
     */
    public String notifyStopSelection(StopSelection stopSelection)
        throws SelectionException_Exception
    {
    	//TODO
        //replace with your impl here
        return null;
    }

    /**
     * 
     * @param cancellation
     * @return
     *     returns java.lang.String
     * @throws SelectionException_Exception
     */
    public String requestCancellation(Cancellation cancellation)
        throws SelectionException_Exception
    {
    	RequestServiceImpl impl = new RequestServiceImpl();
		return impl.requestCancellation(cancellation);
    }

}
